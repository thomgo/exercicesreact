{"version":3,"sources":["logo.svg","layout/Header.js","layout/Footer.js","exercices/Presentation.js","exercices/Light.js","exercices/Todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Footer","Presentation","props","userList","Object","keys","user","map","key","firstname","lastname","Light","useState","isOn","setOn","onClick","id","Todolist","tasks","setTasks","inputValue","setInputValue","type","onChange","event","target","value","newTaskList","push","App","age","job","hobby","description","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAAe,I,YCYAA,MAZf,WACI,OACI,wBAAQC,UAAU,0BAAlB,SACI,0BAASA,UAAU,wBAAnB,UACI,yEACA,oBAAIA,UAAU,4CACd,oGCIDC,MAVf,WACI,OACI,wBAAQD,UAAU,0BAAlB,SACI,yBAASA,UAAU,wBAAnB,SACI,yHCkBDE,MApBf,SAAsBC,GAGlB,IAAMC,EAAWC,OAAOC,KAAKH,EAAMI,MAAMC,KAAI,SAACC,GAAD,OAAS,oBAAIT,UAAU,kBAAd,SAA2CS,EAAM,MAAQN,EAAMI,KAAKE,IAA/BA,MAE3F,OACI,0BAAST,UAAU,OAAnB,UACI,iDACA,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,2BAAf,SACI,qBAAIA,UAAU,cAAd,UACI,oBAAIA,UAAU,iDAAd,SAAgEG,EAAMI,KAAKG,UAAY,IAAMP,EAAMI,KAAKI,WACvGP,a,OCoCVQ,MA9Cf,WAEI,MAAsBC,oBAAS,GAA/B,mBAAOC,EAAP,KAAaC,EAAb,KASA,OACI,0BAASf,UAAU,OAAnB,UACI,0DACA,wBAAQgB,QAVE,WAEdD,GAAMD,IAQ4Bd,UAAU,oBAAxC,SAA6Dc,EAAO,WAAa,YACjF,qBAAKG,GAAG,QAAQjB,UAAW,SAAWc,EAAO,aAAe,iBCuBzDI,MAxCf,WAEI,MAA0BL,mBAAS,IAAnC,mBAAOM,EAAP,KAAcC,EAAd,KAEA,EAAoCP,mBAAS,IAA7C,mBAAOQ,EAAP,KAAmBC,EAAnB,KAiBA,OACI,0BAAStB,UAAU,OAAnB,UACI,4CACA,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,uBAAOA,UAAU,oBAAoBuB,KAAK,OAAOC,SApB9C,SAASC,GACxBH,EAAcG,EAAMC,OAAOC,QAmB0DA,MAAON,IAChF,wBAAQrB,UAAU,yBAAyBgB,QAjB7C,WAEV,IAAIY,EAAcT,EAClBS,EAAYC,KAAKR,GACjBD,EAASQ,GAETN,EAAc,KAWF,wBAEJ,sBAAKtB,UAAU,QAAf,UACI,qEACA,oBAAIA,UAAU,aAAd,SACKmB,EAAMX,KAAI,SAAAmB,GAAK,OAAI,oBAAI3B,UAAU,kBAAd,SAAiC2B,mBCE9DG,MAxBf,WAWE,OACE,gCACE,cAAC,EAAD,IACA,uBAAM9B,UAAU,iBAAhB,UACE,cAAC,EAAD,CAAcO,KAbT,CACTG,UAAW,SACXC,SAAU,UACVoB,IAAK,GACLC,IAAK,YACLC,MAAO,aACPC,YAAa,iBAQT,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,cAAC,EAAD,QCnBSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bc54ec83.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function Header() {\r\n    return(\r\n        <header className=\"py-5 bg-dark text-white\">\r\n            <section className=\"container text-center\">\r\n                <h1>Exercices pour l'apprentissage de REACT</h1>\r\n                <hr className=\"border border-2 bg-danger border-danger\"></hr>\r\n                <p>Réalisez cette page pour monter en compétence sur REACT</p>\r\n            </section>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","function Footer() {\r\n    return(\r\n        <footer className=\"py-5 bg-dark text-white\">\r\n            <section className=\"container text-center\">\r\n                <p>Exercices réalisés par Thomas Gossart dans le cadre de son poste de formateur</p>\r\n            </section>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","// Composant de l'exercice 1\r\n// Exemple de composant fonctionnel qui utilise les props (données figées)\r\nfunction Presentation(props) {\r\n    // On génère les li de la liste sur la base de l'objet passé en props (voir app.js)\r\n    // La loop react standard et le map\r\n    const userList = Object.keys(props.user).map((key) => <li className=\"list-group-item\" key={key}>{key + \" : \" + props.user[key]}</li>);\r\n    // Affichage de la liste\r\n    return(\r\n        <section className=\"my-4\">\r\n            <h2>Présentation</h2>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-8 col-lg-6\">\r\n                    <ul className=\"list-group \">\r\n                        <li className=\"list-group-item bg-dark text-white text-center\">{props.user.firstname + \" \" + props.user.lastname}</li>\r\n                        {userList}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Presentation","import React, {useState} from 'react';\r\n\r\n// Composant fonctionnel qui gère l'exercice deux\r\n// Ici je vous montre l'exemple de l'utilisation des state (données variables) en fonction avec un hook useState\r\nfunction Light() {\r\n    // On défini le state et son setter, un simple booléan pour savoir si c'est allumé\r\n    const [isOn, setOn] = useState(false);\r\n    // Fonction appelée au click sur le bouton et qui déclenche setOn avec la bonne valeur\r\n    let switchLight = function() {\r\n        // Afin de simplifier la syntaxe j'utilise une ternaire au lieu du classique if/else\r\n        setOn(isOn ? false : true);\r\n    }\r\n\r\n    // On affiche le composant\r\n    // Remarquez que le texte du bouton et la classe du fond coloré sont conditionnés à notre état\r\n    return(\r\n        <section className=\"my-4\">\r\n            <h2>Jouez avec la lumière</h2>\r\n            <button onClick={switchLight} className=\"btn btn-secondary\">{isOn ? \"Eteindre\" : \"Allumer\"}</button>\r\n            <div id=\"light\" className={\"my-3 \" + (isOn ? \"bg-warning\" : \"bg-dark\")}></div>\r\n        </section>\r\n    );\r\n}\r\n\r\n// Version similaire mais réalisée avec une classe\r\n// class Light extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             isOn: false\r\n//         }\r\n//     }\r\n\r\n//     switchLight = function() {\r\n//         this.state({\r\n//             isOn: this.state.isOn ? false : true \r\n//         })\r\n//     }\r\n\r\n//     render() {\r\n//         return(\r\n//             <section className=\"my-4\">\r\n//                 <h2>Jouez avec la lumière</h2>\r\n//                 <button onClick={this.switchLight} className=\"btn btn-secondary\">{this.state.isOn ? \"Eteindre\" : \"Allumer\"}</button>\r\n//                 <div id=\"light\" className={\"my-3 \" + (this.state.isOn ? \"bg-warning\" : \"bg-dark\")}></div>\r\n//             </section>\r\n//         );\r\n//     }\r\n// }\r\n\r\nexport default Light","import React, {useState} from 'react';\r\n// Composant pour la réalisation de l'exercice 3\r\nfunction Todolist() {\r\n    // Tableau sous forme d'état pour stocker nos tâches\r\n    const [tasks, setTasks] = useState([]);\r\n    // Etat qui représente la saisie utilisateur dans l'input du formulaire\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    // A chaque variation de la valeur de l'input on stocke la nouvelle valeur dans inputValue\r\n    let handleChange = function(event) {\r\n        setInputValue(event.target.value);\r\n    }\r\n    // Quand l'utilistateur clique sur le bouton on ajoute la valuer de l'input au tableau des tâches\r\n    let addTask = function() {\r\n        // Attention on n'intervient pas directement sur tasks\r\n        let newTaskList = tasks;\r\n        newTaskList.push(inputValue);\r\n        setTasks(newTaskList);\r\n        // On remet la valeur de l'input à vide\r\n        setInputValue(\"\");\r\n    }\r\n\r\n    // remarquez dans l'affichage la gestion de deux évènements distincts\r\n    // Un pour l'input, un pour le bouton\r\n    return(\r\n        <section className=\"my-4\">\r\n            <h2>Todolist :</h2>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <input className=\"form-control w-75\" type=\"text\" onChange={handleChange} value={inputValue}></input>\r\n                    <button className=\"btn btn-secondary my-3\" onClick={addTask}>Ajouter</button>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <h3>Liste de tâches à réaliser</h3>\r\n                    <ul className=\"list-group\">\r\n                        {tasks.map(value => <li className=\"list-group-item\">{value}</li>)}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Todolist","import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport Header from './layout/Header';\r\nimport Footer from './layout/Footer';\r\n\r\nimport Presentation from './exercices/Presentation';\r\nimport Light from './exercices/Light';\r\nimport Todolist from './exercices/Todolist';\r\n\r\n\r\n\r\nfunction App() {\r\n  \r\n  let user = {\r\n    firstname: \"Thomas\",\r\n    lastname: \"Gossart\",\r\n    age: 29,\r\n    job: \"Formateur\",\r\n    hobby: \"Le vélo\",\r\n    description: \"Lorem ipsum\"\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header></Header>\r\n      <main className=\"container my-5\">\r\n        <Presentation user={user}></Presentation>\r\n        <Light></Light>\r\n        <Todolist></Todolist>\r\n      </main>\r\n      <Footer></Footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}